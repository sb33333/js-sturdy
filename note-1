JavaScript


	JavaScript 개요

		html: 문서의 틀을 만듦.
		CSS: 시각 효과.
		JavaScript: 동적 기능.

	JS의 특징
		모든 웹 브라우저에서 작동 가능.
		다양한 라이브러리, 프레임워크.
		다양한 용도 (HTML, API, 어플리케이션 개발 등)

	JavaScript 사용
		1. JavaScript 코드 입력
			1) 내부 스크립트 방식
				ex:
					<script>
					...
					</script>
			
			2) 외부 스크립트 방식
				ex:
					<script src="myscript.js"> </script>
					※ myscript.js 파일이 존재해야 함.

			3) inline 스크립트 방식
				ex:
					<button onclick="alert("hello")></button>
					
			※ 스크립트의 특성 상 html 문서의 처음 부터 불러지므로 <script> 요소를 <body> 요소의 끝쪽에 위치시키는 것을 권장
		
		2. 규칙
			- 대소문자 구분
			- 세미콜론(;)으로 문장 구분
			- 주석
				// 한 줄 주석
				/*
					여러 줄 주석
				*/
			- 식별자는 정해진 규칙에 따라 명명, 예약어를 사용할 수 없음.
			
		
	변수
		- JavaScript에서는 변수 선언 시 자료형을 명시하지 않아도 된다. (var, let, const 등을 사용)
			느슨한 자료형 검사(weak datatype check)
		- 변수를 선언하고 할당할 때 자료형이 정해진다.
			ex:
				let num; (typeof(num) -> 'undefined')
				num = 10; (typeof(num) -> 'number')
				
		- 형 변환
			·자료형에 따라 연산자가 다르게 기능한다.
				ex: 
					"string1" + "string2" = string1string2 (string)
					10 + 20 = 30 (number)
					
			·문자열 자료형에 *, /, % 등을 사용할 경우 NaN(Not a Number) 값이 반환 된다.
				
	JavaScript의 자료형
		- 기본형
			·number
			·String
				※ JS에서는 문자 1개도 문자열로 사용
			·boolean
			·undefined
				자료형이 정의되지 않은 상태.
			·null
				'빈 자료'를 나타냄.
		- 참조형
			·object (객체)
				key : value 형태로 자료를 가질 수 있음.
				중괄호로 선언.
					ex:
						let person = {
							name: "sang",
							age: "30"
						}
				
			·Array (배열)
				배열도 객체의 하나.
				여러 자료를 저장하고 인덱스로 접근할 수 있음.
				대괄호로 선언. 
					ex: 
						let numberArray = [1, 2, 3, 4, 5];
						numberArray[0] ( -> 1);
		
		
	제어문
		1. 조건문
			if문
				ex: 
					if (num < 10) {
						... 실행문 ...;
					}
					
			if-else문
				ex:
					if (num < 10) {
						... 실행문 ...;
					} else if (num < 20) {
						... 실행문 ...;
					} else {
						... 실행문 ...;
					}
					
				※ else 에는 조건문이 없음.
				
			3항 연산자
				ex:
					(score >= 50) ? alert("통과") : alert("실패");
					
			switch-case 문
				ex:
					switch ( 변수 ) {
						case "조건" : ...실행문... ;
							break;
						default : ...실행문... ;
					}
					
				반드시 case 조건 아래에 break문을 넣어서 정해진 분기 후 조건문을 빠져나가도록 한다.
				switch 검사문에는 int이하의 정수, String만 가능하다
				default는 적절한 case가 없을 경우 실행된다. (default가 필요 없으면 없어도 된다.)
				switch - case - break - default를 기억하자.
			
		2. 반복문
			for
				ex: 
					for(let i = 0; i < 10; i++) {
						...실행문... ;
					}
			
				2중, 3중 for 문을 구성할 수 있다. (실행 성능 주의)
			
			while문
				ex:
					while (조건문) {
						...실행문... ;
					}
				
				조건문이 true인 경우에만 실행한다.
				무한 루프문을 만들 때 자주 사용한다.
			
			do-while문
			
				while문과 유사하나 첫 실행은 조건에 관계 없이 하고 1회 실행 후 조건 검사를 한다.
				사용자에게 우선 질의하는 프로그램에 자주 사용된다.
				
			break문
				반복문이 실행중이라도 break문을 만나면 반복문을 빠져나간다.
				
			continue문
				반복문이 실행중이라도 continue문을 만나면 이후 코드를 실행하지 않고 반복문의 맨 앞으로 돌아간다.
				
			

	Event Listner
		1. html 요소 내부 inline script <button on####
			ex: <button onclick="showPrice()"> </button>
			
		2. JavaScript 파일에 .on####
			ex: 
				var heading = document.getElementById("heading");
				heading.onclick = function() { ... };
				
		
