JavaScript 코어 라이브러리

	코어 라이브러리
		○ JS에 미리 정의되어 있어 개발자가 사용할 수 있는 기능.
		○ 코어 라이브러리를 활용해 별도 라이브러리를 만들 수 있다.
		
	살펴 볼 코어 라이브러리
		○ 타이머 함수
		○ Math 클래스
		○ String 클래스
		○ Date 클래스
		○ Array 클래스
		

타이머 함수

	타이머 함수는 전역 객체인 window 객체에 포함되어 있다.
	
	1. 주요 타이머 함수와 기능
		○ setInterval( function, time )
			인수로 주어진 time(ms 단위)마다 function을 실행한다.
			변수에 할당하면 해당 타이머의 id를 저장한다.
						
		○ setTimeout( function, time )
			인수로 주어진 time(ms 단위)후에 function을 1회 실행한다.
			변수에 할당하면 해당 타이머의 id를 저장한다.
		
		○ clearInterval( timerId )
			인수로 주어진 타이머를 정지한다.
			
Math 클래스

	수학과 관련된 여러 기능을 제공하는 클래스다.
	Math 객체를 생성하지 않고 Math.(메서드) 형식으로 사용할 수 있다.
	
	Math 클래스의 주요 기능
	
		1) 속성: Pi (원주율)
		2) 메서드
			random() : 0 에서 1 사이의 난수 발생
			ceil(), floor() : 인수로 넣은 값을 내림, 올림하여 정수 값 반환
			max(), min() : 두 수를 인수로 넣어 최대, 최소 값 반환
			등...
			참조: https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Math
	
	random() 메서드
	
		0 에서 1 사이의 값을 만드는 것에 주의한다. (실수 값)
		정수로 바꾸기 위해서는 parseInt() 또는 ceil(), floor() 등을 이용하자


String 클래스

	문자열에 관련된 클래스로 다양한 메서드를 제공한다.
	
	String 클래스의 주요 기능
		
		1) 속성: length (문자열 길이)
		2) 메서드
			indexOf()
			charAt()
			slice() (= substring())
			substr()
			split()
			등...
			
			참조: https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/String
			
		문자열 객체에 + 연산자를 통해 문자열을 추가할 수 있다.
		
	문자열을 만드는 방법
	
		1) 리터럴 방식
		2) String클래스의 객체를 생성하는 방식
		
		리터럴 방식으로 문자열을 생성해도 JS가 코드를 해석할 때 String클래스의 객체를 생성하는 방식으로 바꿔 실행한다.
	
	String 클래스가 제공하는 메서드를 통해 다양한 문자열 관련 기능을 만들 수 있다.
	
	String 메서드 관련 참조:
		https://hianna.tistory.com/340
		
		
		

기타 참고 자료
	css : in-line 과 float
		https://namujinju.tistory.com/85
		https://blog.naver.com/thdbsgh3443/221229545494
		https://beautifulcss.com/archives/1179
		https://tislwlstnf.tistory.com/16
		http://junil-hwang.com/blog/css-float-layout%ec%97%90-%eb%8c%80%ed%95%9c-%ec%9d%b4%ed%95%b4/