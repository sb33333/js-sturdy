JavaScript 코어 라이브러리

	코어 라이브러리
		○ JS에 미리 정의되어 있어 개발자가 사용할 수 있는 기능.
		○ 코어 라이브러리를 활용해 별도 라이브러리를 만들 수 있다.
		
	살펴 볼 코어 라이브러리
		○ 타이머 함수
		○ Math 클래스
		○ String 클래스
		○ Date 클래스
		○ Array 클래스
		

타이머 함수

	타이머 함수는 전역 객체인 window 객체에 포함되어 있다.
	
	1. 주요 타이머 함수와 기능
		○ setInterval( function, time )
			인수로 주어진 time(ms 단위)마다 function을 실행한다.
			변수에 할당하면 해당 타이머의 id를 저장한다.
						
		○ setTimeout( function, time )
			인수로 주어진 time(ms 단위)후에 function을 1회 실행한다.
			변수에 할당하면 해당 타이머의 id를 저장한다.
		
		○ clearInterval( timerId )
			인수로 주어진 타이머를 정지한다.
			
Math 클래스

	수학과 관련된 여러 기능을 제공하는 클래스다.
	Math 객체를 생성하지 않고 Math.(메서드) 형식으로 사용할 수 있다.
	
	Math 클래스의 주요 기능
	
		1) 속성: Pi (원주율)
		2) 메서드
			random() : 0 에서 1 사이의 난수 발생
			ceil(), floor() : 인수로 넣은 값을 내림, 올림하여 정수 값 반환
			max(), min() : 두 수를 인수로 넣어 최대, 최소 값 반환
			등...
			참조: https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Math
	
	random() 메서드
	
		0 에서 1 사이의 값을 만드는 것에 주의한다. (실수 값)
		정수로 바꾸기 위해서는 parseInt() 또는 ceil(), floor() 등을 이용하자


String 클래스

	문자열에 관련된 클래스로 다양한 메서드를 제공한다.
	
	String 클래스의 주요 기능
		
		1) 속성: length (문자열 길이)
		2) 메서드
			indexOf()
			charAt()
			slice() (= substring())
			substr()
			split()
			등...
			
			참조: https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/String
			
		문자열 객체에 + 연산자를 통해 문자열을 추가할 수 있다.
		
	문자열을 만드는 방법
	
		1) 리터럴 방식
		2) String클래스의 객체를 생성하는 방식
		
		리터럴 방식으로 문자열을 생성해도 JS가 코드를 해석할 때 String클래스의 객체를 생성하는 방식으로 바꿔 실행한다.
	
	String 클래스가 제공하는 메서드를 통해 다양한 문자열 관련 기능을 만들 수 있다.
	
	String 메서드 관련 참조:
		https://hianna.tistory.com/340
		
		
		

기타 참고 자료
	css : in-line 과 float
		https://namujinju.tistory.com/85
		https://blog.naver.com/thdbsgh3443/221229545494
		https://beautifulcss.com/archives/1179
		https://tislwlstnf.tistory.com/16
		http://junil-hwang.com/blog/css-float-layout%ec%97%90-%eb%8c%80%ed%95%9c-%ec%9d%b4%ed%95%b4/


String 클래스 실습 중

	정규표현식 참고 자료: https://codingpractices.tistory.com/93
		
		
Date 클래스
	
	
	○ 날짜와 시간에 관련된 유용한 기능들.
	
	○ Date 클래스를 활용하는 예:
		달력 만들기
		현재 시간 출력
		경과 시간 출력
		등...
		
Date 클래스의 주요 기능

	get + ...
	getDate()
	getDay()
	getFullYear()
	등...
	
	set + ...
	setDate()
	setFullYear()
	등...
	
시간, 분, 초 알아내기
	
	○ Date 클래스의 메서드 이용.
	○ get...() 메서드는 현재 타임존을 기준으로 하기 때문에 다른 타임존의 시간을 확인하기 위해서는 타임존을 바꿔야 함.
	
년, 월, 요일

	○ getMonth() : 월. 0 ~ 11의 정수를 반환하므로 +1을 해서 볼 것.
	○ getDay() : 요일. 0(일) ~ 6(토)의 정수를 반환함. 
	
	
Array 클래스
	○ 배열과 관련된 클래스
	○ 배열 생성, 추가, 삭제, 검색 등
	
	○ Array클래스의 활용
		게시물 목록
		갤러리 이미지 목록
		웹 사이트 메뉴
		등...
		
Array클래스의 주요 기능들
	
	1. 개요
		○ 속성: length (배열의 길이)
		○ 메서드
			concat()
			push()
			pop()
			reverse()
			sort()
			등...
			
			참조: https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Array
		
	2. 배열 만들기
		1) 리터럴 방식
			let arr = ["사과","배","포도"];
			
		2) 배열 클래스 방식
		
			let arr = new Array("사과","배","포도");
			
		※ 리터럴 방식으로 생성해도 배열 클래스 방식으로 자동 해석되어 생성된다.
		
	3. 배열 탐색하기(배열의 값에 접근하기)
	
		○ 배열[인덱스]
			ex: 
				arr[0] // "사과"
				
	4. 배열을 문자열로 만들기
		
		○ .join([seperator]) 메서드를 사용하자.
		
		
	5. 문자열을 배열로 만들기
		
		○ String 클래스의 split() 메서드를 사용하자.
			ex:
				let arr = 문자열.split([separator]);
				
	6. 배열의 특정 위치에 요소 추가
	
		○ 마지막 위치에 추가: push() 메서드
			※ 반환값은 변경된 새로운 배열
		○ 첫 위치에 추가: unShift() 메서드
			※ 반환값은 변경된 새로운 배열
			
		○ n번째 위치에 배열 요소 추가: splice() 메서드
			splice(start, deleteCount, [element])
				start: 시작 위치
				deleteCount: 삭제할 원소의 갯수(삭제를 안하려면 0)
				element: 추가할 원소
			※요소를 추가할 경우 리턴 값이 없음.
				
	7. 배열의 원소 삭제
	
		○ 마지막 위치: pop() 메서드
		○ 첫 위치: shift() 메서드
		○ n번째 위치의 요소 삭제: splice() 메서드
		
	8. 배열의 정렬
		
		○ sort([compare function]) 메서드 사용.
		○ compare function은 정렬 순서를 정의한다.
		○ compare function 생략 시 오름차순으로 정렬.
		○ 정렬은 원본 배열을 수정한다. (수정하고 싶지 않다면 같은 배열을 새로 만들어서 할 것.)
		
		1) 오름차순 정렬
			배열.sort(function(a, b){
				return a - b;
			});
			
		2) 내림차순 정렬
			배열.sort(function(a, b){
				return b - a;
			});
			
		3) 숫자 정렬하기
			sort() 메서드는 문자열 정렬을 위한 것이기 때문에 compareFunction매개변수를 사용해야만 한다.
			
		
		
TDZ에 대해: https://ui.toast.com/weekly-pick/ko_20191014